Задание на работу 5.
Предусмотреть регистрацию пользователя с указанием логина и пароля. Разработать генератор паролей. Исходные данные — три строковые константы (слова). Составить программу, которая записывает пароль следующим образом.
1. В строку <результат> в качестве 2-х первых символов записать буквы, которые в алфавите следуют за буквой, являющейся первым символом первого слова на экране; если это буква «z», записать «а».
2. В качестве второго символа записать букву, которая в алфавите предшествует букве, являющейся третьим символом второго слова на экране; если это буква «а», записать «z».
3. Если третье слово содержит нечетное количество букв, то в качестве четвертого символа записать букву, которая в алфавите следует за буквой, являющейся четвертым символом третьего слова; если это буква «z», записать «а». Если же третье слово содержит четное количество символов, то в качестве четвертого символа записать букву, которая в алфавите предшествует букве, являющейся первым из двух средних символов третьего слова; если это буква «а», записать «z».
4. В качестве пятого символа записать букву, которая в алфавите стоит на месте, соответствующем сумме количеств символов в первом и втором словах; если эта сумма больше 26, найти и использовать в качестве номера позиции искомой буквы в алфавите остаток от деления указанной суммы на 26.
5. Предложить полученную строку в качестве пароля. При отказе предоставить возможность изменить строковые константы и снова сгенерировать пароль.
6. Оценить криптостойкость пароля.
7. Выполнить хэширование пароля методом двойного хэширования и сохранить хэш-код пароля с логином пользователя.
Предусмотреть вход зарегистрированного пользователя.
1. Если указанный пользователем логин есть в базе, запросить пароль.
2. При вводе пароля пользователя обеспечить ввод пароля с отображением вместо каждого символа знаков «*».
3. Сравнить хеш-код пароля пользователя с хэш-кодом, который соответствует логину.
4. Вывести результат аутентификации: пароль верен или неверен.
После идентификации и аутентификации
Работа 5
1. Авторизованному пользователю, который успешно прошел идентификацию и аутентификацию, предоставляется возможность сортировки данных. Для реализации данной операции предусмотреть родительский процесс 1 и дочерний процесс 2 (созданный функцией CreateProcess).
Процесс 1 считывает пары координат (x,y) из файла в формате:
x1 y1
x2 y2
…
xn yn
и проверяет корректность входных данных (численность и попадание в необходимый диапазон).
Процесс 2 выполняет сортировку проверенных данных тем методом, который был реализован в работах 1-4 базового курса.
2. Пары координат из процесса 1 в процесс 2 передаются по созданному в приложении именованному каналу. В качестве цифровой подписи используется хэш-код. Данные передаются после того, как процесс 1 завершает считывание и проверку корректности данных из файла с успешным результатом. После того как данные будут успешно приняты и распознаны в процессе 2, процесс 2 отправляет процессу 1 уведомление по именованному каналу в открытом виде. Процесс 1 выводит полученное уведомление на экран и ожидает завершения обработки данных в процессе 2.
4. После завершения обработки данных в процессе 2 результаты сортировки передаются в процесс 1 по именованному каналу. В качестве цифровой подписи используется хэш-код.
5. Для синхронизации работы потоков использовать функции ожидания и критические секции (объекты типа CRITICAL_SECTION).
